#   Enunciado: Dado un array de números enteros positivos, donde cada uno
#   representa unidades de bloques apilados, debemos calcular cuantas unidades
#   de agua quedarán atrapadas entre ellos.
# 
#   Ejemplo: Dado el array [4, 0, 3, 6, 1, 3].
#            ⏹
#            ⏹
#     ⏹💧💧 ⏹
#     ⏹💧⏹⏹💧 ⏹
#     ⏹💧⏹⏹💧 ⏹
#     ⏹💧⏹⏹⏹⏹
#   Representando bloque con ⏹︎ y agua con 💧, quedarán atrapadas 7 unidades
#   de agua. Suponemos que existe un suelo impermeable en la parte inferior
#   que retiene el agua.

array = (4, 0, 3, 6, 1, 3)

n = array[0]
total = 0
valor = len(array)
x = 0
indice = array[x]
resultado= n - indice

for i in range(valor):
    try:
        indice = array[x]
        resultado= n - indice
        x+=1
        maximo = max(array[x:])
        if maximo >= n > indice:
            resultado
            total = total+resultado
        elif n > maximo > indice:
            resultado_alternativo = maximo - indice
            total = total+resultado_alternativo
        elif n <= indice:
            n = indice
        elif maximo <= indice:
            continue
    except ValueError:
        break      
        
print(f'En total hay {total} gotas de agua')


